# start with the official Composer image and name it
FROM composer:1.7.1 AS composer

# continue with the official PHP image
FROM php:7.2-alpine

# copy the Composer PHAR from the Composer image into the PHP image
COPY --from=composer /usr/bin/composer /usr/bin/composer

# Composer requirements
ARG COMPOSER_AUTH='{}'
ENV COMPOSER_AUTH=${COMPOSER_AUTH}

# Add watchdog
RUN apk --no-cache add curl \
    && echo "Pulling watchdog binary from Github." \
    && curl -sSL https://github.com/openfaas/faas/releases/download/0.9.4/fwatchdog > /usr/bin/fwatchdog \
    && chmod +x /usr/bin/fwatchdog \
    && apk del curl --no-cache

# create non-root user and install Git
RUN addgroup -S app \
    && adduser -S -g app app \
    && mkdir -p /home/app \
    && apk add --no-cache git

# Copy function code to image
WORKDIR /home/app
COPY index.php php-extension.sh composer.* ./
COPY ./function ./function

# Install PHP Extensions
WORKDIR /home/app/function
RUN echo "Installing PHP Extensions" \
    && [[ -f php-extension.sh ]] && sh ./php-extension.sh || \
    echo "php-extension.sh does not exist, skip installing PHP extensions" \
    && chown -R app /home/app/function

# Install Composer Dependencies
USER app
RUN echo "Installing Composer Dependencies" \
    && [[ -f composer.lock || -f composer.json ]] && composer install --no-dev || \
    echo "composer.lock does not exist, skip installing composer dependencies"

# Cleanup
USER root
RUN apk del git --no-cache \
    && rm -rf /usr/src/php \
    && { find /usr/local/lib -type f -print0 | xargs -0r strip --strip-all -p 2>/dev/null || true; } \
    && chown -R app /home/app

# Entry
USER app
WORKDIR /home/app
ENV fprocess="php index.php"
HEALTHCHECK --interval=1s CMD [ -e /tmp/.lock ] || exit 1
CMD ["fwatchdog"]
